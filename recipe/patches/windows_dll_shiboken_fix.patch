diff --git a/sources/pyside2/PySide2/__init__.py.in b/sources/pyside2/PySide2/__init__.py.in
index 035cdd636..f17cd6141 100644
--- a/sources/pyside2/PySide2/__init__.py.in
+++ b/sources/pyside2/PySide2/__init__.py.in
@@ -10,29 +10,6 @@ __version__ = "@FINAL_PACKAGE_VERSION@"
 __version_info__ = (@BINDING_API_MAJOR_VERSION@, @BINDING_API_MINOR_VERSION@, @BINDING_API_MICRO_VERSION@, "@BINDING_API_PRE_RELEASE_VERSION_TYPE@", "@BINDING_API_PRE_RELEASE_VERSION@")
 
 
-def _additional_dll_directories(package_dir):
-    # Find shiboken2 relative to the package directory.
-    root = os.path.dirname(package_dir)
-    # Check for a flat .zip as deployed by cx_free(PYSIDE-1257)
-    if root.endswith('.zip'):
-        return []
-    shiboken2 = os.path.join(root, 'shiboken2')
-    if os.path.isdir(shiboken2): # Standard case, only shiboken2 is needed
-        return [shiboken2]
-    # The below code is for the build process when generate_pyi.py
-    # is executed in the build directory. We need libpyside and Qt in addition.
-    shiboken2 = os.path.join(os.path.dirname(root), 'shiboken2', 'libshiboken')
-    if not os.path.isdir(shiboken2):
-        raise ImportError(shiboken2 + ' does not exist')
-    result = [shiboken2, os.path.join(root, 'libpyside')]
-    for path in os.environ.get('PATH').split(';'):
-        if path:
-             if os.path.exists(os.path.join(path, 'qmake.exe')):
-                 result.append(path)
-                 break
-    return result
-
-
 def _setupQtDirectories():
     # On Windows we need to explicitly import the shiboken2 module so
     # that the libshiboken.dll dependency is loaded by the time a
@@ -50,10 +27,6 @@ def _setupQtDirectories():
 
     pyside_package_dir = os.path.abspath(os.path.dirname(__file__))
 
-    if sys.platform == 'win32' and sys.version_info[0] == 3 and sys.version_info[1] >= 8:
-        for dir in _additional_dll_directories(pyside_package_dir):
-            os.add_dll_directory(dir)
-
     try:
         import shiboken2
     except Exception:
